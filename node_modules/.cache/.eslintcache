[{"/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/index.js":"1","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/App.js":"2","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Navbar.jsx":"3","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Home.jsx":"4","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Code.jsx":"5","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Skills.jsx":"6"},{"size":235,"mtime":1673466564540,"results":"7","hashOfConfig":"8"},{"size":307,"mtime":1673566250324,"results":"9","hashOfConfig":"8"},{"size":1800,"mtime":1673568540191,"results":"10","hashOfConfig":"8"},{"size":285,"mtime":1673566252036,"results":"11","hashOfConfig":"8"},{"size":1083,"mtime":1673566251030,"results":"12","hashOfConfig":"8"},{"size":1791,"mtime":1673566033853,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1li272",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/index.js",[],[],[],"/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/App.js",[],[],"/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Navbar.jsx",["35","36"],[],"import { React,useEffect, useRef } from \"react\";\n\n\nconst SOCIALS = [\n  {\n    name: \"Linkedin\",\n    link: \"https://www.linkedin.com/in/noah-farinas-b3b9571b0/\",\n    icon: \"logo-linkedin\",\n  },\n  {\n    name: \"Instagram\",\n    link: \"https://www.instagram.com/noahhnigel/?hl=en\",\n    icon: \"logo-instagram\",\n  },\n  {\n    name: \"Github\",\n    link: \"https://github.com/noahfarinas\",\n    icon: \"logo-github\",\n  },\n];\nconst NAV = [\n  {\n    name: '\"HOME\"',\n    id: \"photo\",\n  },\n  {\n    name: '\"ABOUT ME\"',\n    id: \"skills\",\n  },\n  {\n    name: '\"PROJECTS\"',\n    id: \"projectView\",\n  },\n];\n\nconst Navbar = () => {\n  const headerRef = useRef(null);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const scrollPos = window.pageYOffset;\n    headerRef.current.style.opacity = 1 - scrollPos / 300;\n  };\n\n  const handleClick = (id) => {\n    const element = document.getElementById(id);\n    console.log(element)\n    element.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <header ref={headerRef}>\n    <div className=\"navbar\">\n      <div className=\"name\">\n        <a href=\"#photo\" onClick={() => handleClick(\"photo\")}>\n          <img src=\"./photos/jordan.GIF\" alt=\"shoes\" />\n        </a>\n          <div className=\"navbarMenu\">\n            {NAV.map((item) => (\n              <h3> <a href=\"#\" onClick={() => handleClick(item.id)}>{item.name}</a></h3>\n            ))}\n          </div>\n      </div>\n      <div className=\"links\">\n        {SOCIALS.map((item) => (\n          <a href={item.link} target=\"_blank\">\n            <ion-icon name={item.icon}></ion-icon>\n          </a>\n        ))}\n      </div>\n    </div>\n  </header>\n);\n};\n\nexport default Navbar;\n","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Home.jsx",[],[],"/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Code.jsx",["37"],[],"import React from \"react\";\n\nconst PROJECTS = [\n  {\n    name: \"Social Links\",\n    link: \"https://noahfarinas.github.io/\",\n    type: \"HTML & CSS\",\n    img: \"./photos/social.png\",\n  },\n  {\n    name: \"Rad Power Bikes\",\n    link: \"https://noahfarinas.github.io/top-rad-bikes/\",\n    type: \"ReactJS\",\n    img: \"./photos/rad.png\",\n  },\n  {\n    name: \"Stretching Search\",\n    link: \"https://noahfarinas.github.io/stretching/\",\n    type: \"ReactJS\",\n    img: \"./photos/stretch.png\",\n  },\n  {\n    name: \"Resume\",\n    link: \"https://noahfarinas.github.io/noahfarinas-react-resume/\",\n    type: \"ReactJS\",\n    img: \"./photos/resume.png\",\n  },\n];\n\nconst Code = () => {\n  return (\n    <div className=\"projectView\">\n      <>\n        {PROJECTS.map((item) => (\n          <ul>\n            <>\n              <img src={item.img} alt=\"test\" />\n              <h3>{item.name}</h3>\n              <li>{item.type}</li>\n              <a href={item.link} target=\"_blank\">\n                View Project\n              </a>\n            </>\n          </ul>\n        ))}\n      </>\n    </div>\n  );\n};\n\nexport default Code;\n","/Users/noahfarinas/Desktop/Coding-Projects/noah-farinas/src/Skills.jsx",[],[],{"ruleId":"38","severity":1,"message":"39","line":66,"column":20,"nodeType":"40","endLine":66,"endColumn":69},{"ruleId":"41","severity":1,"message":"42","line":72,"column":11,"nodeType":"40","messageId":"43","endLine":72,"endColumn":47,"fix":"44"},{"ruleId":"41","severity":1,"message":"42","line":40,"column":15,"nodeType":"40","messageId":"43","endLine":40,"endColumn":51,"fix":"45"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"46","text":"47"},{"range":"48","text":"47"},[1654,1654]," rel=\"noreferrer\"",[938,938]]